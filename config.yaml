# config.yaml (Versão 2.8)

# --- 1. Definições da Série Temporal ---
INPUT_WINDOW_STEPS: 144
OUTPUT_HORIZON_STEPS: 3

# --- 2. Configuração do Cross-Validation ---
CV_SPLITS: 4

# --- 3. Dicionário de Configurações dos Modelos ---
MODELOS:
  '1Arima':
    type: 'statistical'
    module_name: 'Modelos.1Arima'
    class_name: 'ARIMAModel'
    features: ['PowerOutput_mean']
    params:
      order: [5, 1, 0]
    run_tags:
      type: 'statistical'
      status: 'baseline'

  '2XGboosting':
    type: 'tree_based'
    module_name: 'Modelos.2XGboosting'
    class_name: 'XGBoostModel'
    features: ['PowerOutput_mean', 'WindSpeed_mean', 'RotorSpeed_mean', 'GeneratorTemperature_mean', 'PitchDeg_mean']
    params:
      n_estimators: 500
      learning_rate: 0.05
      max_depth: 5
    run_tags:
      type: 'tree_based'
      status: 'baseline'

  '3GRU':
    type: 'pytorch'
    module_name: 'Modelos.3GRU'
    class_name: 'GRUModel'
    features: ['PowerOutput_mean', 'WindSpeed_mean', 'RotorSpeed_mean', 'GeneratorTemperature_mean']
    params:
      hidden_size: 50
      n_layers: 2
      dropout: 0.2
      epochs: 10
      batch_size: 32
      learning_rate: 0.001
    run_tags:
      type: 'recurrent_neural_network'
      status: 'baseline'
      architecture: 'GRU'

  '4LSTM':
    type: 'pytorch'
    module_name: 'Modelos.4LSTM'
    class_name: 'LSTMModel'
    features: ['PowerOutput_mean', 'WindSpeed_mean', 'RotorSpeed_mean', 'GeneratorTemperature_mean']
    params:
      hidden_size: 50
      n_layers: 2
      dropout: 0.2
      epochs: 10
      batch_size: 32
      learning_rate: 0.001
    run_tags:
      type: 'recurrent_neural_network'
      status: 'baseline'
      architecture: 'LSTM'
      
  '4.5LSTM_tunado':
    type: 'pytorch_classifier'
    module_name: 'Modelos.4LSTM_tunado'
    class_name: 'LSTMTunadoModel'
    features: [
        'PowerOutput', 'WindSpeed', 'RotorSpeed', 'GeneratorTemperature', 'PitchDeg',
        'GeneratorTemperature_std_1h', 'WindSpeed_std_1h', 'PowerOutput_std_1h',
        'RotorSpeed_std_1h', 'PitchDeg_std_1h',
        'GeneratorTemperature_roc_1h', 'WindSpeed_roc_1h', 'PowerOutput_roc_1h',
        'RotorSpeed_roc_1h', 'PitchDeg_roc_1h'
    ]
    params:
      hidden_size: 128
      n_layers: 4
      dropout: 0.3
      epochs: 15
      batch_size: 32
      learning_rate: 0.0005
    run_tags:
      type: 'recurrent_neural_network'
      status: 'experimental'
      architecture: 'LSTM_Tunado'

  '5TFT':
    type: 'pytorch'
    module_name: 'Modelos.5TFT'
    class_name: 'TFTModel'
    features: ['PowerOutput_mean', 'WindSpeed_mean', 'RotorSpeed_mean', 'GeneratorTemperature_mean', 'PitchDeg_mean']
    params:
      hidden_size: 64
      attention_head_size: 4
      n_layers: 3
      dropout: 0.1
      epochs: 15 # TFT é mais pesado, menos épocas para testar
      batch_size: 16
      learning_rate: 0.0001
    run_tags:
      type: 'transformer'
      status: 'experimental'
      architecture: 'TFT'